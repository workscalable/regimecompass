apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: regimecompass-ingress
  namespace: regimecompass
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://regimecompass.com,https://www.regimecompass.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-API-Key"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  tls:
  - hosts:
    - regimecompass.com
    - www.regimecompass.com
    - api.regimecompass.com
    secretName: regimecompass-tls
  rules:
  - host: regimecompass.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: regimecompass-service
            port:
              number: 3000
  - host: www.regimecompass.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: regimecompass-service
            port:
              number: 3000
  - host: api.regimecompass.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: regimecompass-service
            port:
              number: 3000
